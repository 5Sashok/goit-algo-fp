import random
import matplotlib.pyplot as plt
import pandas as pd

def monte_carlo_dice_simulation(trials=100000):
    sums_count = {i: 0 for i in range(2, 13)}

    # Імітація кидків
    for _ in range(trials):
        dice1 = random.randint(1, 6)
        dice2 = random.randint(1, 6)
        total = dice1 + dice2
        sums_count[total] += 1

    # Ймовірності
    probabilities = {s: c / trials for s, c in sums_count.items()}

    return sums_count, probabilities


# Запускаємо симуляцію
trials = 100000
sums_count, probabilities = monte_carlo_dice_simulation(trials)

# Аналітичні ймовірності (з формули)
analytical = {
    2: 1/36, 3: 2/36, 4: 3/36, 5: 4/36, 6: 5/36, 7: 6/36,
    8: 5/36, 9: 4/36, 10: 3/36, 11: 2/36, 12: 1/36
}

# Таблиця результатів
df = pd.DataFrame({
    "Сума": list(probabilities.keys()),
    "Ймовірність (Монте-Карло)": [round(probabilities[s]*100, 2) for s in probabilities],
    "Ймовірність (аналітична)": [round(analytical[s]*100, 2) for s in analytical]
})

print(df)

# Побудова графіка
plt.figure(figsize=(10, 6))
plt.bar(df["Сума"] - 0.2, df["Ймовірність (Монте-Карло)"], width=0.4, label="Монте-Карло")
plt.bar(df["Сума"] + 0.2, df["Ймовірність (аналітична)"], width=0.4, label="Аналітична")
plt.xlabel("Сума на кубиках")
plt.ylabel("Ймовірність (%)")
plt.title(f"Порівняння Монте-Карло та аналітичних ймовірностей ({trials} кидків)")
plt.legend()
plt.show()
